{"version":3,"sources":["components/HomePage.js","components/Header.js","components/FlashCard.js","components/Footer.js","components/DeckFlashCards.js","components/App.js","index.js"],"names":["HomePage","visible","setVisible","setDeckAndMeta","deckAndMeta","useState","inputValue","setInputValue","selectValue","setSelectValue","className","src","alt","id","onChange","e","target","value","type","min","max","placeholder","onClick","parseInt","alert","deck","meta","Header","FlashCard","props","contador","setContador","iconsAnswers","setIconsAnswers","questionNumber","question","answer","stage","setStage","useEffect","name","answers","contadorZap","Footer","deDeckAndMeta","restartRecall","map","i","length","push","includes","comparador","Math","random","questionsDecksShuffled","jsx","css","sort","flashcards","DeckFlashCards","forEach","index","flashcard","App","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.0d6a6356.chunk.js","sourcesContent":["import { useState } from 'react';\n\nfunction HomePage({visible, setVisible, deckAndMeta, setDeckAndMeta}) {\n\n    const [inputValue, setInputValue] = useState('');\n    const [selectValue, setSelectValue] = useState('');\n\n    function buttonIniciarRecall() {\n        if (selectValue === \"\") {\n            alert(\"Selecione um deck válido\")\n            return; \n        } else if (parseInt(inputValue)>8) {\n            alert(\"A meta máxima de Zaps é 8\")\n            return;\n        } else {\n            setVisible(false); setDeckAndMeta({deck: selectValue, meta: inputValue})\n        }\n    }\n\n    return (\n        visible === true ? \n        <div className=\"home-page\">\n            <img src=\"assets/imgs/logo-zaprecall.png\" alt=\"logo-zaprecall\" />\n            <h1>ZapRecall</h1>\n            <select className=\"decks\" id=\"decks\" onChange={e => setSelectValue(e.target.value)}>\n                <option value=\"\">Escolha seu deck</option>\n                <option value=\"jsx\">JSX</option>\n                <option value=\"css\">CSS</option>\n            </select>\n            <input type=\"number\" min=\"0\" max=\"8\" placeholder=\"Digite sua meta de zaps...\" onChange={e => setInputValue(e.target.value)}></input>\n            <button onClick={buttonIniciarRecall}>Iniciar Recall!</button>\n        </div>\n        : <></>\n    );\n}\n\nexport default HomePage;","function Header() {\n    return (\n        <header>\n            <img src=\"assets/imgs/logo-zaprecall.png\" alt=\"logo-zaprecall\" />\n            <h1>ZapRecall</h1>\n        </header>\n    );\n}\n\nexport default Header;","import { useState, useEffect } from 'react';\n\n\nfunction FlashCard(props) {\n\n    const {contador, setContador, iconsAnswers, setIconsAnswers, questionNumber, question, answer, visible} = props;\n    const [stage, setStage] = useState(\"questionsList\");\n    useEffect(() => { setStage(\"questionsList\")\n    },[visible])\n\n    function buttonNaoLembrei() {\n        setContador(contador + 1); \n        setStage(\"answered-nao-lembrei\"); \n        setIconsAnswers([...iconsAnswers, <ion-icon id=\"nao-lembrei\" name=\"close-circle\"></ion-icon>])\n    }\n\n    function buttonQuaseLembrei() {\n        setContador(contador + 1); \n        setStage(\"answered-quase-lembrei\"); \n        setIconsAnswers([...iconsAnswers, <ion-icon id=\"quase-lembrei\" name=\"help-circle\"></ion-icon>])\n    }\n\n    function buttonZap() {\n        setContador(contador + 1); \n        setStage(\"answered-zap\"); \n        setIconsAnswers([...iconsAnswers, <ion-icon id=\"zap\" name=\"checkmark-circle\"></ion-icon>])\n    }\n\n\n    if(stage === \"questionsList\") {\n        return (\n            <div className=\"flash-card\">\n                <p>{`Pergunta ${questionNumber}`}</p>\n                <ion-icon name=\"play-outline\" onClick={() => {setStage(\"question\")}}></ion-icon>    \n            </div>\n        );\n    }\n\n    if(stage === \"question\") {\n        return (\n            <div className=\"flash-card-question\">\n                <p>{question}</p>\n                <img src=\"assets/imgs/flip-flashcard-icon.png\" alt=\"flip-card-icon\" onClick={() => setStage(\"answer\")} />   \n            </div>\n        );\n    }\n\n    if(stage === \"answer\") {\n        return (\n            <div className=\"flash-card-answer\">\n                <p>{answer}</p>\n                <div className=\"buttons-answer\">\n                    <button className=\"nao-lembrei\" onClick={buttonNaoLembrei}>Não lembrei</button>\n                    <button className=\"quase-lembrei\" onClick={buttonQuaseLembrei}>Quase não lembrei</button>\n                    <button className=\"zap\" onClick={buttonZap}>Zap!</button>\n                </div>   \n            </div>\n        );\n    }\n\n    if(stage === \"answered-nao-lembrei\") {\n        return (\n            <div className=\"flash-card-answered nao-lembrei\">\n                <p>{`Pergunta ${questionNumber}`}</p>\n                <ion-icon name=\"close-circle\"></ion-icon>    \n            </div>\n    )\n    }\n\n    if(stage === \"answered-quase-lembrei\") {\n        return (\n            <div className=\"flash-card-answered quase-lembrei\">\n                <p>{`Pergunta ${questionNumber}`}</p>\n                <ion-icon name=\"help-circle\"></ion-icon>    \n            </div>\n    )\n    }\n\n    if(stage === \"answered-zap\") {\n        return (\n            <div className=\"flash-card-answered zap\">\n                <p>{`Pergunta ${questionNumber}`}</p>\n                <ion-icon name=\"checkmark-circle\"></ion-icon>    \n            </div>\n    )\n    }\n}\nexport default FlashCard;","let numberOfQuestions = 8;\nlet answers = [];\nlet contadorZap = 0;\n\nfunction Footer({contador, setContador, iconsAnswers, setIconsAnswers, meta, deDeckAndMeta, setDeckAndMeta, setVisible}) {\n\n    function restartRecall() {\n        setContador(0);\n        setIconsAnswers([]);\n        setDeckAndMeta({meta:\"\", deck:\"\"});\n        setVisible(true);\n    }\n\n    if(contador !== numberOfQuestions) {\n        return (\n            <footer>\n                <p>{contador}/{numberOfQuestions} CONCLUÍDOS</p>\n                <div className=\"icons-answer\">\n                    {iconsAnswers.map((answer) => answer)}\n                </div>\n            </footer>\n        );\n    } else {\n        for(let i=0; i<iconsAnswers.length; i++) {\n        let answer = iconsAnswers[i].props.id;\n        answers.push(answer);\n        }\n        for(let i=0; i<answers.length; i++) {\n            if(answers[i] === \"zap\") contadorZap += 1;\n        }\n        if (answers.includes(\"nao-lembrei\") === true) {\n            if (meta === \"\") {\n                return (\n                    <footer className=\"final-msg\">\n                        <p>😢 <span>PUTZ!</span></p>\n                        <p>Ainda faltaram alguns... Mas não desanime!</p>\n                        <div className=\"icons-answer\">\n                            {iconsAnswers.map((answer) => answer)}\n                        </div>\n                        <button className=\"reiniciar\" onClick={restartRecall}>REINICAR RECALL</button>\n                    </footer>\n                )\n            } else {\n                if(contadorZap >= parseInt(meta)) {\n                    return (\n                    <footer className=\"final-msg\">\n                        <p>😢 <span>PUTZ!</span></p>\n                        <p>Ainda faltaram alguns... Mas não desanime!</p>\n                        <p>Lado bom? Você atingiu sua meta de Zaps!</p>\n                        <div className=\"icons-answer\">\n                            {iconsAnswers.map((answer) => answer)}\n                        </div>\n                        <button className=\"reiniciar\" onClick={restartRecall}>REINICAR RECALL</button>\n                    </footer>\n                )\n                } else {\n                    return (\n                    <footer className=\"final-msg\">\n                        <p>😢 <span>PUTZ!</span></p>\n                        <p>Ainda faltaram alguns... Mas não desanime!</p>\n                        <p>Meta de Zaps não atingida! Não desanime, a prática leva a perfeição!</p>\n                        <div className=\"icons-answer\">\n                            {iconsAnswers.map((answer) => answer)}\n                        </div>\n                        <button className=\"reiniciar\" onClick={restartRecall}>REINICAR RECALL</button>\n                    </footer>\n                )\n                }\n            }\n        } else {\n            if (meta === \"\") {\n                return (\n                    <footer className=\"final-msg\" >\n                        <p>🥳 <span>PARABÉNS!</span></p>\n                        <p>Você não esqueceu de nenhum flashcard!</p>\n                        <div className=\"icons-answer\">\n                            {iconsAnswers.map((answer) => answer)}\n                        </div>\n                        <button className=\"reiniciar\" onClick={restartRecall}>REINICAR RECALL</button>\n                    </footer>\n                )\n            } else {\n                if(contadorZap >= parseInt(meta)) {\n                    return (\n                    <footer className=\"final-msg\">\n                        <p>🥳 <span>PARABÉNS!</span></p>\n                        <p>Você não esqueceu de nenhum flashcard!</p>\n                        <p>Quer ficar mais feliz ainda? Atingiu sua meta de Zaps!</p>\n                        <div className=\"icons-answer\">\n                            {iconsAnswers.map((answer) => answer)}\n                        </div>\n                        <button className=\"reiniciar\" onClick={restartRecall}>REINICAR RECALL</button>\n                    </footer>\n                )\n                } else {\n                    return (\n                    <footer className=\"final-msg\">\n                        <p>🥳 <span>PARABÉNS!</span></p>\n                        <p>Você não esqueceu de nenhum flashcard!</p>\n                        <p>A meta de Zaps não foi atingida, mas estamos quase lá!</p>\n                        <div className=\"icons-answer\">\n                            {iconsAnswers.map((answer) => answer)}\n                        </div>\n                        <button className=\"reiniciar\" onClick={restartRecall}>REINICAR RECALL</button>\n                    </footer>\n                )\n                }\n            }\n        }\n    }\n}\n\nexport default Footer;","import Header from \"./Header\";\nimport FlashCard from \"./FlashCard\";\nimport Footer from \"./Footer\";\nimport { useState } from 'react';\n\nconst decks = {\njsx: [\n    {\n        question: \"O que é JSX?\",\n        answer: \"Uma extensão de linguagem do JavaScript\"\n    },\n    {\n        question: \"O React é __ \",\n        answer: \"uma biblioteca JavaScript para construção de interfaces\"\n    },\n    {\n        question: \"Componentes devem iniciar com __\",\n        answer: \"letra maiúscula\"\n    },\n    {\n        question: \"Podemos colocar __ dentro do JSX\",\n        answer: \"expressões\"\n    },\n    {\n        question: \"O ReactDOM nos ajuda __ \",\n        answer: \"interagindo com a DOM para colocar componentes React na mesma\"\n    },\n    {\n        question: \"Usamos o npm para __\",\n        answer: \"gerenciar os pacotes necessários e suas dependências\"\n    },\n    {\n        question: \"Usamos props para __\",\n        answer: \"passar diferentes informações para componentes\"\n    },\n    {\n        question: \"Usamos estado (state) para __\",\n        answer: \"dizer para o React quais informações quando atualizadas devem renderizar a tela novamente\"\n    }\n],\ncss: [\n    {\n        question: \"Como você sublinha o texto?\",\n        answer: \"text-decoration: underline;\"\n    },\n    {\n        question: \"Na hierarquia das regras CSS, qual é a sempre usada?\",\n        answer: \"a mais específica\"\n    },\n    {\n        question: \"Qual a função do Reset CSS?\",\n        answer: \"É um arquivo que “limpa” os estilos padrões de todos os elementos HTML que já possuem uma formatação padrão\"\n    },\n    {\n        question: \"Qual a extensão dos arquivos CSS?\",\n        answer: \".css\"\n    },\n    {\n        question: \"Como podemos se conectar a um arquivo de estilos externo?\",\n        answer: \"Usando a tag <link></link>\"\n    },\n    {\n        question: \"Como fazer uma linha horizontal acima do elemento selecionado?\",\n        answer: \"border: bottom: 1 px solid black;\"\n    },\n    {\n        question: \"O que faz o valor border-box para box-sizing?\",\n        answer: \"O box-sizing com o valor border-box faz com que o navegador não calcule a dimensão de um elemento somando bordas e margens com altura e largura.\"\n    },\n    {\n        question: \"Qual a sintaxe da pseudo-classe que seleciona o n-ésimo elemento em um grupo de elementos?\",\n        answer: \"elemento:nth-child()\"\n    }\n] \n}\n\n// !<------Shuffled Questions------>\n\nfunction comparador() { \n\treturn Math.random() - 0.5; \n}\n\nlet questionsDecksShuffled = {...decks};\nquestionsDecksShuffled.jsx.sort(comparador);\nquestionsDecksShuffled.css.sort(comparador);\n\n\n// !<------Flash Cards------>\n\nconst flashcards = [\n    {\n        questionNumber: 1,\n        question: \"\",\n        answer: \"\"\n    },\n    {\n        questionNumber: 2,\n        question: \"\",\n        answer: \"\"\n    },\n    {\n        questionNumber: 3,\n        question: \"\",\n        answer: \"\"\n    },\n    {\n        questionNumber: 4,\n        question: \"\",\n        answer: \"\"\n    },\n    {\n        questionNumber: 5,\n        question: \"\",\n        answer: \"\"\n    },\n    {\n        questionNumber: 6,\n        question: \"\",\n        answer: \"\"\n    },\n    {\n        questionNumber: 7,\n        question: \"\",\n        answer: \"\"\n    },\n    {\n        questionNumber: 8,\n        question: \"\",\n        answer: \"\"\n    }\n]\n\n\nfunction DeckFlashCards({deckAndMeta, setDeckAndMeta, visible, setVisible}) {\n    if (deckAndMeta.deck === \"jsx\") {\n        questionsDecksShuffled.jsx.forEach((question, index) => {\n        flashcards[index].question = question.question;\n        flashcards[index].answer = question.answer;\n        })\n    }\n    if (deckAndMeta.deck === \"css\") {\n        questionsDecksShuffled.css.forEach((question, index) => {\n        flashcards[index].question = question.question;\n        flashcards[index].answer = question.answer;\n        })\n    }\n\n    const [contador, setContador] = useState(0);\n    const [iconsAnswers, setIconsAnswers] = useState([])\n    \n\n    \n    return (\n        <>\n        <div>\n            <Header />\n            <div className=\"flash-cards\">\n                {flashcards.map((flashcard) => (\n                    <FlashCard key={flashcard.questionNumber} contador = {contador} setContador={setContador} iconsAnswers = {iconsAnswers} \n                    setIconsAnswers = {setIconsAnswers} visible={visible} questionNumber= {flashcard.questionNumber} question={flashcard.question} answer={flashcard.answer}/>\n                ))}\n            </div>\n        </div>            \n        <Footer  contador = {contador} setContador={setContador} iconsAnswers = {iconsAnswers} setIconsAnswers={setIconsAnswers} \n        meta={deckAndMeta.meta} deckAndMeta={deckAndMeta} setDeckAndMeta={setDeckAndMeta} setVisible={setVisible}/>\n        </>\n    );\n}\n\nexport default DeckFlashCards;","import HomePage from \"./HomePage\";\nimport DeckFlashCards from \"./DeckFlashCards\";\nimport { useState } from 'react';\n\n\n\nfunction App() {\n\n    const [deckAndMeta, setDeckAndMeta] = useState({deck:\"\", meta:\"\"});\n    const [visible, setVisible] = useState(true);\n    \n    return (\n        <>\n            <HomePage visible={visible} setVisible={setVisible} deckAndMeta={deckAndMeta} setDeckAndMeta={setDeckAndMeta}/>\n            <DeckFlashCards deckAndMeta={deckAndMeta} setDeckAndMeta={setDeckAndMeta} visible={visible} setVisible={setVisible}/>\n        </>\n    );\n}\n\nexport default  App;\n","import ReactDOM from 'react-dom';\nimport App from './components/App.js'\n\nReactDOM.render(<App />, document.querySelector(\".root\"));"],"sourceRoot":""}