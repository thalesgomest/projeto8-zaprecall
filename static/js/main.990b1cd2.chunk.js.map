{"version":3,"sources":["components/HomePage.js","components/Header.js","components/FlashCard.js","components/Footer.js","components/DeckFlashCards.js","components/App.js","index.js"],"names":["HomePage","visible","setVisible","setDeckAndMeta","deckAndMeta","useState","inputValue","setInputValue","selectValue","setSelectValue","className","src","alt","id","onChange","e","target","value","type","min","max","placeholder","onClick","parseInt","alert","deck","meta","Header","FlashCard","props","contador","setContador","iconsAnswers","setIconsAnswers","questionNumber","question","answer","stage","setStage","name","answers","contadorZap","Footer","restartRecall","document","location","reload","deDeckAndMeta","map","i","length","push","includes","comparador","Math","random","questionsDecksShuffled","jsx","css","sort","flashcards","DeckFlashCards","forEach","index","flashcard","App","ReactDOM","render","querySelector"],"mappings":"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","file":"static/js/main.990b1cd2.chunk.js","sourcesContent":["import { useState } from 'react';\r\n\r\nfunction HomePage({visible, setVisible, deckAndMeta, setDeckAndMeta}) {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n    const [selectValue, setSelectValue] = useState('');\r\n\r\n    function buttonIniciarRecall() {\r\n        if (selectValue === \"\") {\r\n            alert(\"Selecione um deck válido\")\r\n            return; \r\n        } else if (parseInt(inputValue)>8) {\r\n            alert(\"A meta máxima de Zaps é 8\")\r\n            return;\r\n        } else {\r\n            setVisible(false); setDeckAndMeta({deck: selectValue, meta: inputValue})\r\n        }\r\n    }\r\n\r\n    return (\r\n        visible === true ? \r\n        <div className=\"home-page\">\r\n            <img src=\"assets/imgs/logo-zaprecall.png\" alt=\"logo-zaprecall\" />\r\n            <h1>ZapRecall</h1>\r\n            <select className=\"decks\" id=\"decks\" onChange={e => setSelectValue(e.target.value)}>\r\n                <option value=\"\">Escolha seu deck</option>\r\n                <option value=\"jsx\">JSX</option>\r\n                <option value=\"css\">CSS</option>\r\n            </select>\r\n            <input type=\"number\" min=\"0\" max=\"8\" placeholder=\"Digite sua meta de zaps...\" onChange={e => setInputValue(e.target.value)}></input>\r\n            <button onClick={buttonIniciarRecall}>Iniciar Recall!</button>\r\n        </div>\r\n        : <></>\r\n    );\r\n}\r\n\r\nexport default HomePage;","function Header() {\r\n    return (\r\n        <header>\r\n            <img src=\"assets/imgs/logo-zaprecall.png\" alt=\"logo-zaprecall\" />\r\n            <h1>ZapRecall</h1>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","import { useState } from 'react';\r\n\r\n\r\nfunction FlashCard(props) {\r\n\r\n    const {contador, setContador, iconsAnswers, setIconsAnswers, questionNumber, question, answer} = props;\r\n    const [stage, setStage] = useState(\"questionsList\");\r\n\r\n    function buttonNaoLembrei() {\r\n        setContador(contador + 1); \r\n        setStage(\"answered-nao-lembrei\"); \r\n        setIconsAnswers([...iconsAnswers, <ion-icon id=\"nao-lembrei\" name=\"close-circle\"></ion-icon>])\r\n    }\r\n\r\n    function buttonQuaseLembrei() {\r\n        setContador(contador + 1); \r\n        setStage(\"answered-quase-lembrei\"); \r\n        setIconsAnswers([...iconsAnswers, <ion-icon id=\"quase-lembrei\" name=\"help-circle\"></ion-icon>])\r\n    }\r\n\r\n    function buttonZap() {\r\n        setContador(contador + 1); \r\n        setStage(\"answered-zap\"); \r\n        setIconsAnswers([...iconsAnswers, <ion-icon id=\"zap\" name=\"checkmark-circle\"></ion-icon>])\r\n    }\r\n\r\n\r\n    if(stage === \"questionsList\") {\r\n        return (\r\n            <div className=\"flash-card\">\r\n                <p>{`Pergunta ${questionNumber}`}</p>\r\n                <ion-icon name=\"play-outline\" onClick={() => {setStage(\"question\")}}></ion-icon>    \r\n            </div>\r\n        );\r\n    }\r\n\r\n    if(stage === \"question\") {\r\n        return (\r\n            <div className=\"flash-card-question\">\r\n                <p>{question}</p>\r\n                <img src=\"assets/imgs/flip-flashcard-icon.png\" alt=\"flip-card-icon\" onClick={() => setStage(\"answer\")} />   \r\n            </div>\r\n        );\r\n    }\r\n\r\n    if(stage === \"answer\") {\r\n        return (\r\n            <div className=\"flash-card-answer\">\r\n                <p>{answer}</p>\r\n                <div className=\"buttons-answer\">\r\n                    <button className=\"nao-lembrei\" onClick={buttonNaoLembrei}>Não lembrei</button>\r\n                    <button className=\"quase-lembrei\" onClick={buttonQuaseLembrei}>Quase não lembrei</button>\r\n                    <button className=\"zap\" onClick={buttonZap}>Zap!</button>\r\n                </div>   \r\n            </div>\r\n        );\r\n    }\r\n\r\n    if(stage === \"answered-nao-lembrei\") {\r\n        return (\r\n            <div className=\"flash-card-answered nao-lembrei\">\r\n                <p>{`Pergunta ${questionNumber}`}</p>\r\n                <ion-icon name=\"close-circle\"></ion-icon>    \r\n            </div>\r\n    )\r\n    }\r\n\r\n    if(stage === \"answered-quase-lembrei\") {\r\n        return (\r\n            <div className=\"flash-card-answered quase-lembrei\">\r\n                <p>{`Pergunta ${questionNumber}`}</p>\r\n                <ion-icon name=\"help-circle\"></ion-icon>    \r\n            </div>\r\n    )\r\n    }\r\n\r\n    if(stage === \"answered-zap\") {\r\n        return (\r\n            <div className=\"flash-card-answered zap\">\r\n                <p>{`Pergunta ${questionNumber}`}</p>\r\n                <ion-icon name=\"checkmark-circle\"></ion-icon>    \r\n            </div>\r\n    )\r\n    }\r\n}\r\nexport default FlashCard;","let numberOfQuestions = 8;\r\nlet answers = [];\r\nlet contadorZap = 0;\r\n\r\nfunction Footer({contador, setContador, iconsAnswers, setIconsAnswers, meta, deDeckAndMeta, setDeckAndMeta, setVisible}) {\r\n\r\n    function restartRecall() {\r\n        // setContador(0);\r\n        // setIconsAnswers([]);\r\n        // setDeckAndMeta({meta:\"\", deck:\"\"});\r\n        // setVisible(true);\r\n        document.location.reload(true);\r\n    }\r\n\r\n    if(contador !== numberOfQuestions) {\r\n        return (\r\n            <footer>\r\n                <p>{contador}/{numberOfQuestions} CONCLUÍDOS</p>\r\n                <div className=\"icons-answer\">\r\n                    {iconsAnswers.map((answer) => answer)}\r\n                </div>\r\n            </footer>\r\n        );\r\n    } else {\r\n        for(let i=0; i<iconsAnswers.length; i++) {\r\n        let answer = iconsAnswers[i].props.id;\r\n        answers.push(answer);\r\n        }\r\n        for(let i=0; i<answers.length; i++) {\r\n            if(answers[i] === \"zap\") contadorZap += 1;\r\n        }\r\n        if (answers.includes(\"nao-lembrei\") === true) {\r\n            if (meta === \"\") {\r\n                return (\r\n                    <footer className=\"final-msg\">\r\n                        <p>😢 <span>PUTZ!</span></p>\r\n                        <p>Ainda faltaram alguns... Mas não desanime!</p>\r\n                        <div className=\"icons-answer\">\r\n                            {iconsAnswers.map((answer) => answer)}\r\n                        </div>\r\n                        <button className=\"reiniciar\" onClick={restartRecall}>REINICAR RECALL</button>\r\n                    </footer>\r\n                )\r\n            } else {\r\n                if(contadorZap >= parseInt(meta)) {\r\n                    return (\r\n                    <footer className=\"final-msg\">\r\n                        <p>😢 <span>PUTZ!</span></p>\r\n                        <p>Ainda faltaram alguns... Mas não desanime!</p>\r\n                        <p>Lado bom? Você atingiu sua meta de Zaps!</p>\r\n                        <div className=\"icons-answer\">\r\n                            {iconsAnswers.map((answer) => answer)}\r\n                        </div>\r\n                        <button className=\"reiniciar\" onClick={restartRecall}>REINICAR RECALL</button>\r\n                    </footer>\r\n                )\r\n                } else {\r\n                    return (\r\n                    <footer className=\"final-msg\">\r\n                        <p>😢 <span>PUTZ!</span></p>\r\n                        <p>Ainda faltaram alguns... Mas não desanime!</p>\r\n                        <p>Meta de Zaps não atingida! Não desanime, a prática leva a perfeição!</p>\r\n                        <div className=\"icons-answer\">\r\n                            {iconsAnswers.map((answer) => answer)}\r\n                        </div>\r\n                        <button className=\"reiniciar\" onClick={restartRecall}>REINICAR RECALL</button>\r\n                    </footer>\r\n                )\r\n                }\r\n            }\r\n        } else {\r\n            if (meta === \"\") {\r\n                return (\r\n                    <footer className=\"final-msg\" >\r\n                        <p>🥳 <span>PARABÉNS!</span></p>\r\n                        <p>Você não esqueceu de nenhum flashcard!</p>\r\n                        <div className=\"icons-answer\">\r\n                            {iconsAnswers.map((answer) => answer)}\r\n                        </div>\r\n                        <button className=\"reiniciar\" onClick={restartRecall}>REINICAR RECALL</button>\r\n                    </footer>\r\n                )\r\n            } else {\r\n                if(contadorZap >= parseInt(meta)) {\r\n                    return (\r\n                    <footer className=\"final-msg\">\r\n                        <p>🥳 <span>PARABÉNS!</span></p>\r\n                        <p>Você não esqueceu de nenhum flashcard!</p>\r\n                        <p>Quer ficar mais feliz ainda? Atingiu sua meta de Zaps!</p>\r\n                        <div className=\"icons-answer\">\r\n                            {iconsAnswers.map((answer) => answer)}\r\n                        </div>\r\n                        <button className=\"reiniciar\" onClick={restartRecall}>REINICAR RECALL</button>\r\n                    </footer>\r\n                )\r\n                } else {\r\n                    return (\r\n                    <footer className=\"final-msg\">\r\n                        <p>🥳 <span>PARABÉNS!</span></p>\r\n                        <p>Você não esqueceu de nenhum flashcard!</p>\r\n                        <p>A meta de Zaps não foi atingida, mas estamos quase lá!</p>\r\n                        <div className=\"icons-answer\">\r\n                            {iconsAnswers.map((answer) => answer)}\r\n                        </div>\r\n                        <button className=\"reiniciar\" onClick={restartRecall}>REINICAR RECALL</button>\r\n                    </footer>\r\n                )\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default Footer;","import Header from \"./Header\";\r\nimport FlashCard from \"./FlashCard\";\r\nimport Footer from \"./Footer\";\r\nimport { useState } from 'react';\r\n\r\nconst decks = {\r\njsx: [\r\n    {\r\n        question: \"O que é JSX?\",\r\n        answer: \"Uma extensão de linguagem do JavaScript\"\r\n    },\r\n    {\r\n        question: \"O React é __ \",\r\n        answer: \"uma biblioteca JavaScript para construção de interfaces\"\r\n    },\r\n    {\r\n        question: \"Componentes devem iniciar com __\",\r\n        answer: \"letra maiúscula\"\r\n    },\r\n    {\r\n        question: \"Podemos colocar __ dentro do JSX\",\r\n        answer: \"expressões\"\r\n    },\r\n    {\r\n        question: \"O ReactDOM nos ajuda __ \",\r\n        answer: \"interagindo com a DOM para colocar componentes React na mesma\"\r\n    },\r\n    {\r\n        question: \"Usamos o npm para __\",\r\n        answer: \"gerenciar os pacotes necessários e suas dependências\"\r\n    },\r\n    {\r\n        question: \"Usamos props para __\",\r\n        answer: \"passar diferentes informações para componentes\"\r\n    },\r\n    {\r\n        question: \"Usamos estado (state) para __\",\r\n        answer: \"dizer para o React quais informações quando atualizadas devem renderizar a tela novamente\"\r\n    }\r\n],\r\ncss: [\r\n    {\r\n        question: \"Como você sublinha o texto?\",\r\n        answer: \"text-decoration: underline;\"\r\n    },\r\n    {\r\n        question: \"Na hierarquia das regras CSS, qual é a sempre usada?\",\r\n        answer: \"a mais específica\"\r\n    },\r\n    {\r\n        question: \"Qual a função do Reset CSS?\",\r\n        answer: \"É um arquivo que “limpa” os estilos padrões de todos os elementos HTML que já possuem uma formatação padrão\"\r\n    },\r\n    {\r\n        question: \"Qual a extensão dos arquivos CSS?\",\r\n        answer: \".css\"\r\n    },\r\n    {\r\n        question: \"Como podemos se conectar a um arquivo de estilos externo?\",\r\n        answer: \"Usando a tag <link></link>\"\r\n    },\r\n    {\r\n        question: \"Como fazer uma linha horizontal acima do elemento selecionado?\",\r\n        answer: \"border: bottom: 1 px solid black;\"\r\n    },\r\n    {\r\n        question: \"O que faz o valor border-box para box-sizing?\",\r\n        answer: \"O box-sizing com o valor border-box faz com que o navegador não calcule a dimensão de um elemento somando bordas e margens com altura e largura.\"\r\n    },\r\n    {\r\n        question: \"Qual a sintaxe da pseudo-classe que seleciona o n-ésimo elemento em um grupo de elementos?\",\r\n        answer: \"elemento:nth-child()\"\r\n    }\r\n] \r\n}\r\n\r\n// !<------Shuffled Questions------>\r\n\r\nfunction comparador() { \r\n\treturn Math.random() - 0.5; \r\n}\r\n\r\nlet questionsDecksShuffled = {...decks};\r\nquestionsDecksShuffled.jsx.sort(comparador);\r\nquestionsDecksShuffled.css.sort(comparador);\r\n\r\n\r\n// !<------Flash Cards------>\r\n\r\nconst flashcards = [\r\n    {\r\n        questionNumber: 1,\r\n        question: \"\",\r\n        answer: \"\"\r\n    },\r\n    {\r\n        questionNumber: 2,\r\n        question: \"\",\r\n        answer: \"\"\r\n    },\r\n    {\r\n        questionNumber: 3,\r\n        question: \"\",\r\n        answer: \"\"\r\n    },\r\n    {\r\n        questionNumber: 4,\r\n        question: \"\",\r\n        answer: \"\"\r\n    },\r\n    {\r\n        questionNumber: 5,\r\n        question: \"\",\r\n        answer: \"\"\r\n    },\r\n    {\r\n        questionNumber: 6,\r\n        question: \"\",\r\n        answer: \"\"\r\n    },\r\n    {\r\n        questionNumber: 7,\r\n        question: \"\",\r\n        answer: \"\"\r\n    },\r\n    {\r\n        questionNumber: 8,\r\n        question: \"\",\r\n        answer: \"\"\r\n    }\r\n]\r\n\r\n\r\nfunction DeckFlashCards({deckAndMeta, setDeckAndMeta, setVisible}) {\r\n    if (deckAndMeta.deck === \"jsx\") {\r\n        questionsDecksShuffled.jsx.forEach((question, index) => {\r\n        flashcards[index].question = question.question;\r\n        flashcards[index].answer = question.answer;\r\n        })\r\n    }\r\n    if (deckAndMeta.deck === \"css\") {\r\n        questionsDecksShuffled.css.forEach((question, index) => {\r\n        flashcards[index].question = question.question;\r\n        flashcards[index].answer = question.answer;\r\n        })\r\n    }\r\n\r\n    const [contador, setContador] = useState(0);\r\n    const [iconsAnswers, setIconsAnswers] = useState([])\r\n\r\n    \r\n    return (\r\n        <>\r\n        <div>\r\n            <Header />\r\n            <div className=\"flash-cards\">\r\n                {flashcards.map((flashcard) => (\r\n                    <FlashCard key={flashcard.questionNumber} contador = {contador} setContador={setContador} iconsAnswers = {iconsAnswers} \r\n                    setIconsAnswers = {setIconsAnswers} questionNumber= {flashcard.questionNumber} question={flashcard.question} answer={flashcard.answer}/>\r\n                ))}\r\n            </div>\r\n        </div>            \r\n        <Footer  contador = {contador} setContador={setContador} iconsAnswers = {iconsAnswers} setIconsAnswers={setIconsAnswers} \r\n        meta={deckAndMeta.meta} deckAndMeta={deckAndMeta} setDeckAndMeta={setDeckAndMeta} setVisible={setVisible}/>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default DeckFlashCards;","import HomePage from \"./HomePage\";\r\nimport DeckFlashCards from \"./DeckFlashCards\";\r\nimport { useState } from 'react';\r\n\r\n\r\n\r\nfunction App() {\r\n\r\n    const [deckAndMeta, setDeckAndMeta] = useState({deck:\"\", meta:\"\"});\r\n    const [visible, setVisible] = useState(true);\r\n    \r\n    return (\r\n        <>\r\n            <HomePage visible={visible} setVisible={setVisible} deckAndMeta={deckAndMeta} setDeckAndMeta={setDeckAndMeta}/>\r\n            <DeckFlashCards deckAndMeta={deckAndMeta} setDeckAndMeta={setDeckAndMeta} setVisible={setVisible}/>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default  App;\r\n","import ReactDOM from 'react-dom';\r\nimport App from './components/App.js'\r\n\r\nReactDOM.render(<App />, document.querySelector(\".root\"));"],"sourceRoot":""}